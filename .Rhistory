xlab("xG values") +
ylab("density") +
theme_minimal()
df <- data.frame(
x = 0.25,
y = 0.9,
label = "Both density functions describe the scaled probability of different xG values \nin the output of two xG models applied to the same Barcelona shots for seasons 2007/2008 - 2018/2019. \n\nMost shots have very low xG values of less than 0.10 while high xG shots are very rare even for top teams like Barcelona. \n\nBoth xG models observe shots with low and high xG with similar probability. However they deviate in the region 0.08 - 0.5. \nWhile the naive model assigns values between 0.08 and 0.20 more often, the Statsbomb model \nobserves values between 0.20 and 0.5 more often. \nThis leads to a higher average xG value from the <b style = 'color:tomato2'>Statsbomb</b> model of 0.13 compared to 0.11 from the naive model."
)
ggplot(shots_sb) +
geom_density(aes(simple_xg, ..scaled..), color = "black") +
geom_density(aes(shot.statsbomb_xg, ..scaled..), color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$shot.statsbomb_xg), linetype = "dashed", color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$simple_xg), linetype = "dashed", color = "black") +
geom_textbox(
data = df,
aes(x, y, label = label),
hjust = 0, vjust = 1
) +
xlab("xG values") +
ylab("density") +
theme_minimal()
df <- data.frame(
x = 0.25,
y = 0.9,
label = "Both density functions describe the scaled probability of different xG values \nin the output of two xG models applied to the same Barcelona shots for seasons 2007/2008 - 2018/2019. \n\nMost shots have very low xG values of less than 0.10 while high xG shots are very rare even for top teams like Barcelona. \n\nBoth xG models observe shots with low and high xG with similar probability. However they deviate in the region 0.08 - 0.5. \nWhile the naive model assigns values between 0.08 and 0.20 more often, the Statsbomb model \nobserves values between 0.20 and 0.5 more often. \nThis leads to a higher average xG value from the <b style = 'color:tomato2'>Statsbomb</b> model of 0.13 compared to 0.11 from the naive model."
)
ggplot(shots_sb) +
geom_density(aes(simple_xg, ..scaled..), color = "black") +
geom_density(aes(shot.statsbomb_xg, ..scaled..), color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$shot.statsbomb_xg), linetype = "dashed", color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$simple_xg), linetype = "dashed", color = "black") +
geom_textbox(
data = df,
aes(x, y, label = label),
hjust = 0, vjust = 1, size = 3,
) +
xlab("xG values") +
ylab("density") +
theme_minimal()
df <- data.frame(
x = 0.25,
y = 1,
label = "Both density functions describe the scaled probability of different xG values \nin the output of two xG models applied to the same Barcelona shots for seasons 2007/2008 - 2018/2019. \n\nMost shots have very low xG values of less than 0.10 while high xG shots are very rare even for top teams like Barcelona. \n\nBoth xG models observe shots with low and high xG with similar probability. However they deviate in the region 0.08 - 0.5. \nWhile the naive model assigns values between 0.08 and 0.20 more often, the Statsbomb model \nobserves values between 0.20 and 0.5 more often. \nThis leads to a higher average xG value from the <b style = 'color:tomato2'>Statsbomb</b> model of 0.13 compared to 0.11 from the naive model."
)
ggplot(shots_sb) +
geom_density(aes(simple_xg, ..scaled..), color = "black") +
geom_density(aes(shot.statsbomb_xg, ..scaled..), color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$shot.statsbomb_xg), linetype = "dashed", color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$simple_xg), linetype = "dashed", color = "black") +
geom_textbox(
data = df,
aes(x, y, label = label),
hjust = 0, vjust = 1, size = 3,
) +
xlab("xG values") +
ylab("density") +
theme_minimal()
df <- data.frame(
x = 0.25,
y = 1,
label = "Both density functions describe the scaled probability of different xG values \nin the output of two xG models applied to the same Barcelona shots for seasons 2007/2008 - 2018/2019. \n\nMost shots have very low xG values of less than 0.10 while high xG shots are very rare even for top teams like Barcelona. \n\nBoth xG models observe shots with low and high xG with similar probability. However they deviate in the region 0.08 - 0.5. \nWhile the naive model assigns values between 0.08 and 0.20 more often, the Statsbomb model \nobserves values between 0.20 and 0.5 more often. \nThis leads to a higher average xG value from the <b style = 'color:#DC2228'>Statsbomb</b> model of 0.13 compared to 0.11 from the naive model."
)
ggplot(shots_sb) +
geom_density(aes(simple_xg, ..scaled..), color = "black") +
geom_density(aes(shot.statsbomb_xg, ..scaled..), color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$shot.statsbomb_xg), linetype = "dashed", color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$simple_xg), linetype = "dashed", color = "black") +
geom_textbox(
data = df,
aes(x, y, label = label),
hjust = 0, vjust = 1, size = 3,
) +
xlab("xG values") +
ylab("density") +
theme_minimal()
df <- data.frame(
x = 0.25,
y = 1,
label = "Both density functions describe the scaled probability of different xG values \nin the output of two xG models applied to the same Barcelona shots for seasons 2007/2008 - 2018/2019. \n\nMost shots have very low xG values of less than 0.10 while high xG shots are very rare even for top teams like Barcelona. \n\nBoth xG models observe shots with low and high xG with similar probability. However they deviate in the region 0.08 - 0.5. \nWhile the naive model assigns values between 0.08 and 0.20 more often, the Statsbomb model \nobserves values between 0.20 and 0.5 more often. \nThis leads to a higher average xG value from the <b style = 'color:#DC2228'>Statsbomb</b> model of 0.13 compared to 0.11 from the naive model."
)
ggplot(shots_sb) +
geom_density(aes(simple_xg, ..scaled..), color = "black") +
geom_density(aes(shot.statsbomb_xg, ..scaled..), color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$shot.statsbomb_xg), linetype = "dashed", color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$simple_xg), linetype = "dashed", color = "black") +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(3, "in"),
height = grid::unit(3, "in"),
hjust = 0, vjust = 1, size = 3,
) +
xlab("xG values") +
ylab("density") +
theme_minimal()
df <- data.frame(
x = 0.25,
y = 1,
label = "Both density functions describe the scaled probability of different xG values \nin the output of two xG models applied to the same Barcelona shots for seasons 2007/2008 - 2018/2019. \n\nMost shots have very low xG values of less than 0.10 while high xG shots are very rare even for top teams like Barcelona. \n\nBoth xG models observe shots with low and high xG with similar probability. However they deviate in the region 0.08 - 0.5. \nWhile the naive model assigns values between 0.08 and 0.20 more often, the Statsbomb model \nobserves values between 0.20 and 0.5 more often. \nThis leads to a higher average xG value from the <b style = 'color:#DC2228'>Statsbomb</b> model of 0.13 compared to 0.11 from the naive model."
)
ggplot(shots_sb) +
geom_density(aes(simple_xg, ..scaled..), color = "black") +
geom_density(aes(shot.statsbomb_xg, ..scaled..), color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$shot.statsbomb_xg), linetype = "dashed", color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$simple_xg), linetype = "dashed", color = "black") +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(4, "in"),
height = grid::unit(2.5, "in"),
hjust = 0, vjust = 1, size = 3,
) +
xlab("xG values") +
ylab("density") +
theme_minimal()
df <- data.frame(
x = 0.25,
y = 1,
label = "Both density functions describe the scaled probability of different xG values \nin the output of two xG models applied to the same Barcelona shots for seasons 2007/2008 - 2018/2019. \n\nMost shots have very low xG values of less than 0.10 while high xG shots are very rare even for top teams like Barcelona. \n\nBoth xG models observe shots with low and high xG with similar probability. However they deviate in the region 0.08 - 0.5. \nWhile the naive model assigns values between 0.08 and 0.20 more often, the Statsbomb model \nobserves values between 0.20 and 0.5 more often. \nThis leads to a higher average xG value from the <b style = 'color:#DC2228'>Statsbomb</b> model of 0.13 compared to 0.11 from the naive model."
)
ggplot(shots_sb) +
geom_density(aes(simple_xg, ..scaled..), color = "black") +
geom_density(aes(shot.statsbomb_xg, ..scaled..), color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$shot.statsbomb_xg), linetype = "dashed", color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$simple_xg), linetype = "dashed", color = "black") +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(4, "in"),
height = grid::unit(2, "in"),
hjust = 0, vjust = 1, size = 3,
) +
xlab("xG values") +
ylab("density") +
theme_minimal()
df <- data.frame(
x = 0.25,
y = 1,
label = "Both density functions describe the scaled probability of different xG values \nin the output of two xG models applied to the same Barcelona shots for seasons 2007/2008 - 2018/2019. \n\nMost shots have very low xG values of less than 0.10 while high xG shots are very rare even for top teams like Barcelona. \n\nBoth xG models observe shots with low and high xG with similar probability. However they deviate in the region 0.08 - 0.5. \nWhile the naive model assigns values between 0.08 and 0.20 more often, the <b style = 'color:#DC2228'>Statsbomb</b> model \nobserves values between 0.20 and 0.5 more often. \nThis leads to a higher average xG value from the <b style = 'color:#DC2228'>Statsbomb</b> model of 0.13 compared to 0.11 from the <b style = 'color:#FFFFFF'>Naive</b> model."
)
ggplot(shots_sb) +
geom_density(aes(simple_xg, ..scaled..), color = "black") +
geom_density(aes(shot.statsbomb_xg, ..scaled..), color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$shot.statsbomb_xg), linetype = "dashed", color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$simple_xg), linetype = "dashed", color = "black") +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(4, "in"),
height = grid::unit(2, "in"),
hjust = 0, vjust = 1, size = 3,
) +
xlab("xG values") +
ylab("density") +
theme_minimal()
df <- data.frame(
x = 0.25,
y = 1,
label = "Both density functions describe the scaled probability of different xG values \nin the output of two xG models applied to the same Barcelona shots for seasons 2007/2008 - 2018/2019. \n\nMost shots have very low xG values of less than 0.10 while high xG shots are very rare even for top teams like Barcelona. \n\nBoth xG models observe shots with low and high xG with similar probability. However they deviate in the region 0.08 - 0.5. \nWhile the naive model assigns values between 0.08 and 0.20 more often, the <b style = 'color:#DC2228'>Statsbomb</b> model \nobserves values between 0.20 and 0.5 more often. \nThis leads to a higher average xG value from the <b style = 'color:#DC2228'>Statsbomb</b> model of 0.13 compared to 0.11 from the <b style = 'color:#000000'>Naive</b> model."
)
ggplot(shots_sb) +
geom_density(aes(simple_xg, ..scaled..), color = "black") +
geom_density(aes(shot.statsbomb_xg, ..scaled..), color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$shot.statsbomb_xg), linetype = "dashed", color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$simple_xg), linetype = "dashed", color = "black") +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(4, "in"),
height = grid::unit(2, "in"),
hjust = 0, vjust = 1, size = 3,
) +
xlab("xG values") +
ylab("density") +
theme_minimal()
df <- data.frame(
x = 0.25,
y = 1,
label = "Both density functions describe the scaled probability of different xG values \nin the output of two xG models applied to the same Barcelona shots for seasons 2007/2008 - 2018/2019. \n\nMost shots have very low xG values of less than 0.10 while high xG shots are very rare even for top teams like Barcelona. \n\nBoth xG models observe shots with low and high xG with similar probability. However they deviate in the region 0.08 - 0.5. \nWhile the <b style = 'color:#000000'>Naive</b> model assigns values between 0.08 and 0.20 more often, the <b style = 'color:#DC2228'>Statsbomb</b> model \nobserves values between 0.20 and 0.5 more often. \nThis leads to a higher average xG value from the <b style = 'color:#DC2228'>Statsbomb</b> model of 0.13 compared to 0.11 from the <b style = 'color:#000000'>Naive</b> model."
)
ggplot(shots_sb) +
geom_density(aes(simple_xg, ..scaled..), color = "black") +
geom_density(aes(shot.statsbomb_xg, ..scaled..), color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$shot.statsbomb_xg), linetype = "dashed", color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$simple_xg), linetype = "dashed", color = "black") +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(4, "in"),
height = grid::unit(2, "in"),
hjust = 0, vjust = 1, size = 3,
) +
xlab("xG values") +
ylab("density") +
theme_minimal()
df <- data.frame(
x = 0.25,
y = 1,
label = "Both density functions describe the scaled probability of different xG values \nin the output of two xG models applied to the same Barcelona shots for seasons 2007/2008 - 2018/2019. \n\nMost shots have very low xG values of less than 0.10 while high xG shots are very rare even for top teams like Barcelona. \n\nBoth xG models observe shots with low and high xG with similar probability. However they deviate in the region 0.08 - 0.5. \nWhile the <b style = 'color:#000000'>Naive</b> model assigns values between 0.08 and 0.20 more often, the <b style = 'color:#DC2228'>Statsbomb</b> model \nobserves values between 0.20 and 0.5 more often. \n\nThis leads to a higher average xG value from the <b style = 'color:#DC2228'>Statsbomb</b> model of 0.13 compared to 0.11 from the <b style = 'color:#000000'>Naive</b> model."
)
ggplot(shots_sb) +
geom_density(aes(simple_xg, ..scaled..), color = "black") +
geom_density(aes(shot.statsbomb_xg, ..scaled..), color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$shot.statsbomb_xg), linetype = "dashed", color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$simple_xg), linetype = "dashed", color = "black") +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(4, "in"),
height = grid::unit(2, "in"),
hjust = 0, vjust = 1, size = 3,
) +
xlab("xG values") +
ylab("density") +
theme_minimal()
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(cum_goals = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = cum_goals)) +
geom_line(aes(x = shots, y = cum_sb_xg), color = "green") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "red") +
facet_wrap(~season.season_name) +
theme_minimal()
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = cum_goals)) +
geom_line(aes(x = shots, y = cum_sb_xg), color = "green") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "red") +
facet_wrap(~season.season_name) +
theme_minimal()
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`)) +
geom_line(aes(x = shots, y = cum_sb_xg), color = "green") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "red") +
facet_wrap(~season.season_name) +
theme_minimal()
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`)) +
geom_line(aes(x = shots, y = cum_sb_xg), color = "#000000") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "#DC2228") +
facet_wrap(~season.season_name) +
theme_minimal()
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`)) +
geom_line(aes(x = shots, y = cum_sb_xg), color = "#DC2228") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "#000000") +
facet_wrap(~season.season_name) +
theme_minimal()
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`), color = "#000000") +
geom_line(aes(x = shots, y = cum_sb_xg), color = "#DC2228") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "#91bfdb") +
facet_wrap(~season.season_name) +
labs(subtitle = glue::glue("We do not see this bias for a sophisticated model. Teams <b style = 'color:#DC2228'>Statsbomb</b> cumulative xG spread the whole range of shot volume")) +
theme_minimal() +
theme(plot.title = element_markdown(size = 9))
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`), color = "#000000") +
geom_line(aes(x = shots, y = cum_sb_xg), color = "#DC2228") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "#91bfdb") +
facet_wrap(~season.season_name) +
labs(title = glue::glue("We do not see this bias for a sophisticated model. Teams <b style = 'color:#DC2228'>Statsbomb</b> cumulative xG spread the whole range of shot volume")) +
theme_minimal() +
theme(plot.title = element_markdown(size = 9))
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`), color = "#000000") +
geom_line(aes(x = shots, y = cum_sb_xg), color = "#DC2228") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "#91bfdb") +
facet_wrap(~season.season_name) +
labs(title = glue::glue("<b style = 'color:#91bfdb'>Naive</b> xG models consistently underestimate Barcelona's cumulative goals. <b style = 'color:#DC2228'>Statsbomb's</b> xG models tracks closer")) +
theme_minimal() +
theme(plot.title = element_markdown(size = 9))
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`), color = "#000000") +
geom_line(aes(x = shots, y = cum_sb_xg), color = "#DC2228") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "#91bfdb") +
facet_wrap(~season.season_name) +
labs(title = glue::glue("<b style = 'color:#91bfdb'>Naive</b> xG models consistently underestimate Barcelona's <b style = 'color:#000000'>cumulative goals</b>. <b style = 'color:#DC2228'>Statsbomb's</b> xG models tracks closer.")) +
theme_minimal() +
theme(plot.title = element_markdown(size = 9))
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`), color = "#000000") +
geom_line(aes(x = shots, y = cum_sb_xg), color = "#DC2228") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "#91bfdb") +
facet_wrap(~season.season_name) +
labs(title = glue::glue("<b style = 'color:#91bfdb'>Naive</b> xG models consistently underestimate Barcelona's <b style = 'color:#000000'>cumulative goals</b>. <b style = 'color:#DC2228'>Statsbomb's</b> xG models tracks closer.")) +
theme_minimal() +
theme(plot.title = element_markdown(size = 12))
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`), color = "#000000") +
geom_line(aes(x = shots, y = cum_sb_xg), color = "#DC2228") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "#91bfdb") +
facet_wrap(~season.season_name) +
labs(title = glue::glue("<b style = 'color:#91bfdb'>Naive</b> xG models consistently underestimate Barcelona's <b style = 'color:#000000'>cumulative goals</b>.\n <b style = 'color:#DC2228'>Statsbomb's</b> xG models tracks closer.")) +
theme_minimal() +
theme(plot.title = element_markdown(size = 12))
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`), color = "#000000") +
geom_line(aes(x = shots, y = cum_sb_xg), color = "#DC2228") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "#91bfdb") +
facet_wrap(~season.season_name) +
labs(title = glue::glue("<b style = 'color:#91bfdb'>Naive</b> xG models consistently underestimate Barcelona's <b style = 'color:#000000'>cumulative goals</b>. \n<b style = 'color:#DC2228'>Statsbomb's</b> xG models tracks closer.")) +
theme_minimal() +
theme(plot.title = element_markdown(size = 12))
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`), color = "#000000") +
geom_line(aes(x = shots, y = cum_sb_xg), color = "#DC2228") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "#91bfdb") +
facet_wrap(~season.season_name) +
labs(title = glue::glue("<b style = 'color:#91bfdb'>Naive</b> xG models consistently underestimate Barcelona's <b style = 'color:#000000'>cumulative goals</b>. <b style = 'color:#DC2228'>\nStatsbomb's</b> xG models tracks closer.")) +
theme_minimal() +
theme(plot.title = element_markdown(size = 12))
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`), color = "#000000") +
geom_line(aes(x = shots, y = cum_sb_xg), color = "#DC2228") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "#91bfdb") +
facet_wrap(~season.season_name) +
labs(title = glue::glue("<b style = 'color:#91bfdb'>Naive</b> xG models consistently underestimate Barcelona's <b style = 'color:#000000'>cumulative goals</b>."),
subtitle = glue::glue("<b style = 'color:#DC2228'>Statsbomb's</b> xG models tracks closer.")
) +
theme_minimal() +
theme(plot.title = element_markdown(size = 12),
plot.subtitle = element_markdown(size = 12))
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`), color = "#000000") +
geom_line(aes(x = shots, y = cum_sb_xg), color = "#DC2228") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "#91bfdb") +
facet_wrap(~season.season_name) +
labs(title = glue::glue("<b style = 'color:#91bfdb'>Naive</b> xG models consistently underestimate Barcelona's <b style = 'color:#000000'>cumulative goals</b>."),
subtitle = glue::glue("<b style = 'color:#DC2228'>Statsbomb's</b> model tracks closer.")
) +
theme_minimal() +
theme(plot.title = element_markdown(size = 12),
plot.subtitle = element_markdown(size = 12))
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`), color = "#000000") +
geom_line(aes(x = shots, y = cum_sb_xg), color = "#DC2228") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "#91bfdb") +
facet_wrap(~season.season_name) +
labs(title = glue::glue("<b style = 'color:#91bfdb'>Naive</b> xG models consistently underestimate Barcelona's <b style = 'color:#000000'>cumulative goals</b>."),
subtitle = glue::glue("<b style = 'color:#DC2228'>Statsbomb's</b> model tracks much closer.")
) +
theme_minimal() +
theme(plot.title = element_markdown(size = 12),
plot.subtitle = element_markdown(size = 12))
shots_sb_plot <- shots_sb %>%
group_by(season.season_name) %>%
mutate(shots = row_number()) %>%
mutate(cum_sb_xg = cumsum(shot.statsbomb_xg)) %>%
mutate(cum_simple_xg = cumsum(simple_xg)) %>%
mutate(`cumulative goals/xG` = cumsum(isGoal)) %>%
ungroup()
ggplot(shots_sb_plot) +
geom_line(aes(x = shots, y = `cumulative goals/xG`), color = "#000000") +
geom_line(aes(x = shots, y = cum_sb_xg), color = "#DC2228") +
geom_line(aes(x = shots, y = cum_simple_xg), color = "#91bfdb") +
facet_wrap(~season.season_name) +
labs(title = glue::glue("<b style = 'color:#91bfdb'>Naive</b> xG models consistently underestimate Barcelona's <b style = 'color:#000000'>cumulative goals</b>."),
subtitle = glue::glue("<b style = 'color:#DC2228'>Statsbomb's</b> model tracks much closer.")
) +
theme_minimal() +
theme(plot.title = element_markdown(size = 12),
plot.subtitle = element_markdown(size = 12))
df <- data.frame(
x = 0.25,
y = 1,
label = "Both density functions describe the scaled probabilities of different xG values \nin the output of two xG models applied to the same Barcelona shots for seasons 2007/2008 - 2018/2019. \n\nMost shots have very low xG values of less than 0.10 while high xG shots are very rare even for top teams like Barcelona. \n\nBoth xG models observe shots with low and high xG with similar probability. However they deviate in the region 0.08 - 0.5. \nWhile the <b style = 'color:#91bfdb'>Naive</b> model assigns values between 0.08 and 0.20 more often, the <b style = 'color:#DC2228'>Statsbomb</b> model \nobserves values between 0.20 and 0.5 more often. \n\nThis leads to a higher average xG value from the <b style = 'color:#DC2228'>Statsbomb</b> model of 0.13 compared to 0.11 from the <b style = 'color:#91bfdb'>Naive</b> model."
)
ggplot(shots_sb) +
geom_density(aes(simple_xg, ..scaled..), color = "#91bfdb") +
geom_density(aes(shot.statsbomb_xg, ..scaled..), color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$shot.statsbomb_xg), linetype = "dashed", color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$simple_xg), linetype = "dashed", color = "#91bfdb") +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(4, "in"),
height = grid::unit(2, "in"),
hjust = 0, vjust = 1, size = 3,
) +
xlab("xG values") +
ylab("density") +
theme_minimal()
df <- data.frame(
x = 0.25,
y = 1,
label = "Both density functions describe the scaled probabilities of different xG values \nin the output of two xG models applied to the same Barcelona shots for seasons 2007/2008 - 2018/2019. \n\nMost shots have very low xG values of less than 0.10 while high xG shots are very rare even for top teams like Barcelona. \n\nBoth xG models observe shots with low and high xG with similar probability. However they deviate in the region 0.08 - 0.5. \nWhile the <b style = 'color:#91bfdb'>Naive</b> model assigns values between 0.08 and 0.20 more often, the <b style = 'color:#DC2228'>Statsbomb</b> model \nobserves values between 0.20 and 0.5 more often. \n\nThis leads to a higher average xG value from the <b style = 'color:#DC2228'>Statsbomb</b> model of 0.13 compared to 0.11 from the <b style = 'color:#91bfdb'>Naive</b> model."
)
ggplot(shots_sb) +
geom_density(aes(simple_xg, ..scaled..), color = "#91bfdb") +
geom_density(aes(shot.statsbomb_xg, ..scaled..), color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$shot.statsbomb_xg), linetype = "dashed", color = "#DC2228") +
geom_vline(xintercept = mean(shots_sb$simple_xg), linetype = "dashed", color = "#91bfdb") +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(4, "in"),
height = grid::unit(2, "in"),
hjust = 0, vjust = 1, size = 3,
) +
xlab("xG values") +
ylab("density") +
theme_minimal()
