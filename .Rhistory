match_ids <- c("1343409")
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
throw_ins <- tbl(con, "events") %>%
filter(match_id %in% match_ids) %>%
#filter(teamId == team_id) %>%
filter(type_name == "Pass") %>%
filter(qualifiers %like% "%ThrowIn%") %>%
collect()
DBI::dbDisconnect(con)
how_many_seconds <- 7
#throw_ins_sub <- head(throw_ins, 14)
throw_ins_sub <- throw_ins
df_to_concat <- list()
for(i in 1:nrow(throw_ins_sub))
{
match_id_filter <- throw_ins_sub$match_id[[i]]
start_time <- throw_ins_sub$minute[[i]]*60 + throw_ins_sub$second[[i]]
end_time <- start_time + how_many_seconds
team_id <- throw_ins_sub$teamId[[i]]
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
throw_in_scene <- tbl(con, "events") %>%
filter(match_id == match_id_filter) %>%
filter(between(minute*60 + second, start_time, end_time)) %>%
filter(isTouch == 1) %>%
filter(teamId == team_id | (teamId != team_id & outcome == "Successful" & type_name == "Pass")) %>%
collect()
DBI::dbDisconnect(con)
throw_in_row <- slice(throw_ins_sub, i)
start_x <- throw_in_row$location_x*1.05
start_y <- throw_in_row$location_y*0.68
first_three <- head(throw_in_scene, 3) %>%
filter(teamId == team_id & type_name == "Pass")
if(nrow(first_three) == 3 & (first_three[1, ]$playerId == first_three[3, ]$playerId)){
throw_in_row$layoff <- 1
} else{
throw_in_row$layoff <- 0
}
# two definitions: either team kept possession for full 5 seconds or team has possession at the end of 5 seconds
throw_in_scene <- throw_in_scene %>%
mutate(accurate_pass = if_else(outcome == "Successful" & type_name == "Pass", 1, 0))
if((length(unique(throw_in_scene$teamId)) == 1 & sum(throw_in_scene$accurate_pass) >= 2 )| 1 %in% throw_in_scene$isShot){
throw_in_row$kept_possession <- 1
} else {
throw_in_row$kept_possession <- 0
}
throw_in_scene <- throw_in_scene %>%
filter(teamId == team_id & outcome == "Successful" & type_name == "Pass")
if(sum(throw_in_scene$accurate_pass) >= 2){
final_pass <- slice(throw_in_scene, nrow(throw_in_scene)) %>%
mutate(PassEndY = as.numeric(PassEndY), PassEndX = as.numeric(PassEndX))
end_x <- final_pass$PassEndX*1.05
end_y <- final_pass$PassEndY*0.68
travel_from_throw_in <- sqrt((end_x - start_x)^2 + (end_y - start_y)^2)
throw_in_row$travel <- travel_from_throw_in
if(travel_from_throw_in >= 30){
throw_in_row$kept_possession_travel <- 1
} else {
throw_in_row$kept_possession_travel <- 0
}
} else {
throw_in_row$kept_possession_travel <- 0
throw_in_row$travel <- NA
}
df_to_concat[[i]] <- throw_in_row
}
throw_ins_sub_poss <- purrr::reduce(df_to_concat, rbind)
throw_ins_sub_poss <- left_join(throw_ins_sub_poss, matches, by = c("match_id"))
View(throw_ins_sub_poss)
how_many_seconds <- 7
throw_ins_sub <- head(throw_ins, 19)
#throw_ins_sub <- throw_ins
df_to_concat <- list()
for(i in 1:nrow(throw_ins_sub))
{
match_id_filter <- throw_ins_sub$match_id[[i]]
start_time <- throw_ins_sub$minute[[i]]*60 + throw_ins_sub$second[[i]]
end_time <- start_time + how_many_seconds
team_id <- throw_ins_sub$teamId[[i]]
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
throw_in_scene <- tbl(con, "events") %>%
filter(match_id == match_id_filter) %>%
filter(between(minute*60 + second, start_time, end_time)) %>%
filter(isTouch == 1) %>%
filter(teamId == team_id | (teamId != team_id & outcome == "Successful" & type_name == "Pass")) %>%
collect()
DBI::dbDisconnect(con)
throw_in_row <- slice(throw_ins_sub, i)
start_x <- throw_in_row$location_x*1.05
start_y <- throw_in_row$location_y*0.68
first_three <- head(throw_in_scene, 3) %>%
filter(teamId == team_id & type_name == "Pass")
if(nrow(first_three) == 3 & (first_three[1, ]$playerId == first_three[3, ]$playerId)){
throw_in_row$layoff <- 1
} else{
throw_in_row$layoff <- 0
}
# two definitions: either team kept possession for full 5 seconds or team has possession at the end of 5 seconds
throw_in_scene <- throw_in_scene %>%
mutate(accurate_pass = if_else(outcome == "Successful" & type_name == "Pass", 1, 0))
if((length(unique(throw_in_scene$teamId)) == 1 & sum(throw_in_scene$accurate_pass) >= 2 )| 1 %in% throw_in_scene$isShot){
throw_in_row$kept_possession <- 1
} else {
throw_in_row$kept_possession <- 0
}
throw_in_scene <- throw_in_scene %>%
filter(teamId == team_id & outcome == "Successful" & type_name == "Pass")
if(sum(throw_in_scene$accurate_pass) >= 2){
final_pass <- slice(throw_in_scene, nrow(throw_in_scene)) %>%
mutate(PassEndY = as.numeric(PassEndY), PassEndX = as.numeric(PassEndX))
end_x <- final_pass$PassEndX*1.05
end_y <- final_pass$PassEndY*0.68
travel_from_throw_in <- sqrt((end_x - start_x)^2 + (end_y - start_y)^2)
throw_in_row$travel <- travel_from_throw_in
if(travel_from_throw_in >= 30){
throw_in_row$kept_possession_travel <- 1
} else {
throw_in_row$kept_possession_travel <- 0
}
} else {
throw_in_row$kept_possession_travel <- 0
throw_in_row$travel <- NA
}
df_to_concat[[i]] <- throw_in_row
}
throw_ins_sub_poss <- purrr::reduce(df_to_concat, rbind)
throw_ins_sub_poss <- left_join(throw_ins_sub_poss, matches, by = c("match_id"))
View(throw_in_scene)
how_many_seconds <- 7
#throw_ins_sub <- head(throw_ins, 19)
throw_ins_sub <- throw_ins
df_to_concat <- list()
for(i in 1:nrow(throw_ins_sub))
{
match_id_filter <- throw_ins_sub$match_id[[i]]
start_time <- throw_ins_sub$minute[[i]]*60 + throw_ins_sub$second[[i]]
end_time <- start_time + how_many_seconds
team_id <- throw_ins_sub$teamId[[i]]
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
throw_in_scene <- tbl(con, "events") %>%
filter(match_id == match_id_filter) %>%
filter(between(minute*60 + second, start_time, end_time)) %>%
filter(isTouch == 1) %>%
filter(teamId == team_id | (teamId != team_id & outcome == "Successful" & type_name == "Pass")) %>%
collect()
DBI::dbDisconnect(con)
throw_in_row <- slice(throw_ins_sub, i)
start_x <- throw_in_row$location_x*1.05
start_y <- throw_in_row$location_y*0.68
first_three <- head(throw_in_scene, 3) %>%
filter(teamId == team_id & type_name == "Pass")
if(nrow(first_three) == 3 & (first_three[1, ]$playerId == first_three[3, ]$playerId)){
throw_in_row$layoff <- 1
} else{
throw_in_row$layoff <- 0
}
# two definitions: either team kept possession for full 5 seconds or team has possession at the end of 5 seconds
throw_in_scene <- throw_in_scene %>%
mutate(accurate_pass = if_else(outcome == "Successful" & type_name == "Pass", 1, 0))
if((length(unique(throw_in_scene$teamId)) == 1 & sum(throw_in_scene$accurate_pass) >= 2 )| 1 %in% throw_in_scene$isShot){
throw_in_row$kept_possession <- 1
} else {
throw_in_row$kept_possession <- 0
}
throw_in_scene <- throw_in_scene %>%
filter(teamId == team_id & outcome == "Successful" & type_name == "Pass")
if(sum(throw_in_scene$accurate_pass) >= 2){
final_pass <- slice(throw_in_scene, nrow(throw_in_scene)) %>%
mutate(PassEndY = as.numeric(PassEndY), PassEndX = as.numeric(PassEndX))
end_x <- final_pass$PassEndX*1.05
end_y <- final_pass$PassEndY*0.68
travel_from_throw_in <- sqrt((end_x - start_x)^2 + (end_y - start_y)^2)
throw_in_row$travel <- travel_from_throw_in
if(travel_from_throw_in >= 30){
throw_in_row$kept_possession_travel <- 1
} else {
throw_in_row$kept_possession_travel <- 0
}
} else {
throw_in_row$kept_possession_travel <- 0
throw_in_row$travel <- NA
}
df_to_concat[[i]] <- throw_in_row
}
throw_ins_sub_poss <- purrr::reduce(df_to_concat, rbind)
throw_ins_sub_poss <- left_join(throw_ins_sub_poss, matches, by = c("match_id"))
how_many_seconds <- 60
#events_sub <- head(events, 100)
throw_ins_sub <- throw_ins
df_to_concat <- list()
for(i in 1:nrow(throw_ins_sub))
{
match_id_filter <- throw_ins_sub$match_id[[i]]
end_time <- throw_ins_sub$minute[[i]]*60 + throw_ins_sub$second[[i]]
start_time <- end_time - how_many_seconds
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
throw_in_scene <- tbl(con, "events") %>%
filter(match_id == match_id_filter) %>%
filter(between(minute*60 + second, start_time, end_time)) %>%
collect()
DBI::dbDisconnect(con)
throw_in_row <- slice(throw_ins_sub, i)
row_in_scene <- nrow(throw_in_scene)
if(row_in_scene >= 2){
throw_in_row$time_to_throw_in <- (throw_in_scene$minute[[row_in_scene]]*60 + throw_in_scene$second[[row_in_scene]]) -
(throw_in_scene$minute[[row_in_scene-1]]*60 + throw_in_scene$second[[row_in_scene-1]])
} else{
throw_in_row$time_to_throw_in <- 60
}
df_to_concat[[i]] <- throw_in_row
}
throw_ins_sub_time <- purrr::reduce(df_to_concat, rbind)
throw_ins_sub_time <- left_join(throw_ins_sub_time, matches, by = c("match_id"))
throw_ins_sub_time_short <- throw_ins_sub_time %>%
select(event_id, time_to_throw_in)
throw_ins_sub_poss_q <- throw_ins_sub_poss %>%
mutate(tercile = ceiling(location_x/33))
kept_possession <- throw_ins_sub_poss_q %>%
#group_by(season, league, teamId) %>%
group_by(match_id, teamId) %>%
summarize(kept_possession = mean(kept_possession), kept_possession_travel = mean(kept_possession_travel), layoff = mean(layoff))
throw_ins_sub_time_q <- throw_ins_sub_time %>%
mutate(quintile = ceiling(location_x/20))
time_to_throw <- throw_ins_sub_time_q %>%
group_by(season, league, quintile) %>%
summarize(time_to_throw_in = mean(time_to_throw_in))
merged_throw_in <- left_join(throw_ins_sub_time, select(throw_ins_sub_poss, c("event_id", "kept_possession")), matches, by = c("event_id")) %>%
mutate(quintile = ceiling(location_x/20))
retention_pressure <- merged_throw_in %>%
filter(time_to_throw_in >= 10) %>%
group_by(teamId) %>%
summarize(kept_possession = mean(kept_possession))
retention_by_time <- merged_throw_in %>%
mutate(time_to_throw_in = if_else(time_to_throw_in >= 30, 30, time_to_throw_in)) %>%
group_by(time_to_throw_in) %>%
summarize(kept_possession = mean(kept_possession), n = n())
length <- merged_throw_in %>%
mutate(Length = as.numeric(Length)) %>%
filter(time_to_throw_in >= 10) %>%
group_by(season, league, quintile) %>%
summarize(length = mean(Length, na.rm = TRUE))
View(throw_in_scene)
how_many_seconds <- 7
#throw_ins_sub <- head(throw_ins, 19)
throw_ins_sub <- throw_ins
df_to_concat <- list()
for(i in 1:nrow(throw_ins_sub))
{
match_id_filter <- throw_ins_sub$match_id[[i]]
start_time <- throw_ins_sub$minute[[i]]*60 + throw_ins_sub$second[[i]]
end_time <- start_time + how_many_seconds
team_id <- throw_ins_sub$teamId[[i]]
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
throw_in_scene <- tbl(con, "events") %>%
filter(match_id == match_id_filter) %>%
filter(between(minute*60 + second, start_time, end_time)) %>%
filter(isTouch == 1) %>%
filter(teamId == team_id | (teamId != team_id & outcome == "Successful" & type_name == "Pass")) %>%
collect()
DBI::dbDisconnect(con)
throw_in_row <- slice(throw_ins_sub, i)
start_x <- throw_in_row$location_x*1.05
start_y <- throw_in_row$location_y*0.68
first_three <- head(throw_in_scene, 3) %>%
filter(teamId == team_id & type_name == "Pass")
if(nrow(first_three) == 3 & (first_three[1, ]$playerId == first_three[3, ]$playerId)){
throw_in_row$layoff <- 1
} else{
throw_in_row$layoff <- 0
}
# two definitions: either team kept possession for full 5 seconds or team has possession at the end of 5 seconds
throw_in_scene <- throw_in_scene %>%
mutate(accurate_pass = if_else(outcome == "Successful" & type_name == "Pass", 1, 0))
if((length(unique(throw_in_scene$teamId)) == 1 & sum(throw_in_scene$accurate_pass) >= 2 )| 1 %in% throw_in_scene$isShot){
throw_in_row$kept_possession <- 1
} else {
throw_in_row$kept_possession <- 0
}
throw_in_scene <- throw_in_scene %>%
filter(teamId == team_id & outcome == "Successful" & type_name == "Pass")
if(sum(throw_in_scene$accurate_pass) >= 2){
final_pass <- slice(throw_in_scene, nrow(throw_in_scene)) %>%
mutate(PassEndY = as.numeric(PassEndY), PassEndX = as.numeric(PassEndX))
end_x <- final_pass$PassEndX*1.05
end_y <- final_pass$PassEndY*0.68
travel_from_throw_in <- sum(throw_in_scene$Length)
throw_in_row$travel <- travel_from_throw_in
if(travel_from_throw_in >= 30){
throw_in_row$kept_possession_travel <- 1
} else {
throw_in_row$kept_possession_travel <- 0
}
} else {
throw_in_row$kept_possession_travel <- 0
throw_in_row$travel <- NA
}
df_to_concat[[i]] <- throw_in_row
}
how_many_seconds <- 7
#throw_ins_sub <- head(throw_ins, 19)
throw_ins_sub <- throw_ins
df_to_concat <- list()
for(i in 1:nrow(throw_ins_sub))
{
match_id_filter <- throw_ins_sub$match_id[[i]]
start_time <- throw_ins_sub$minute[[i]]*60 + throw_ins_sub$second[[i]]
end_time <- start_time + how_many_seconds
team_id <- throw_ins_sub$teamId[[i]]
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
throw_in_scene <- tbl(con, "events") %>%
filter(match_id == match_id_filter) %>%
filter(between(minute*60 + second, start_time, end_time)) %>%
filter(isTouch == 1) %>%
filter(teamId == team_id | (teamId != team_id & outcome == "Successful" & type_name == "Pass")) %>%
collect()
DBI::dbDisconnect(con)
throw_in_row <- slice(throw_ins_sub, i)
start_x <- throw_in_row$location_x*1.05
start_y <- throw_in_row$location_y*0.68
first_three <- head(throw_in_scene, 3) %>%
filter(teamId == team_id & type_name == "Pass")
if(nrow(first_three) == 3 & (first_three[1, ]$playerId == first_three[3, ]$playerId)){
throw_in_row$layoff <- 1
} else{
throw_in_row$layoff <- 0
}
# two definitions: either team kept possession for full 5 seconds or team has possession at the end of 5 seconds
throw_in_scene <- throw_in_scene %>%
mutate(accurate_pass = if_else(outcome == "Successful" & type_name == "Pass", 1, 0))
if((length(unique(throw_in_scene$teamId)) == 1 & sum(throw_in_scene$accurate_pass) >= 2 )| 1 %in% throw_in_scene$isShot){
throw_in_row$kept_possession <- 1
} else {
throw_in_row$kept_possession <- 0
}
throw_in_scene <- throw_in_scene %>%
filter(teamId == team_id & outcome == "Successful" & type_name == "Pass")
if(sum(throw_in_scene$accurate_pass) >= 2){
final_pass <- slice(throw_in_scene, nrow(throw_in_scene)) %>%
mutate(PassEndY = as.numeric(PassEndY), PassEndX = as.numeric(PassEndX), Length = as.numeric(Length))
end_x <- final_pass$PassEndX*1.05
end_y <- final_pass$PassEndY*0.68
travel_from_throw_in <- sum(throw_in_scene$Length)
throw_in_row$travel <- travel_from_throw_in
if(travel_from_throw_in >= 30){
throw_in_row$kept_possession_travel <- 1
} else {
throw_in_row$kept_possession_travel <- 0
}
} else {
throw_in_row$kept_possession_travel <- 0
throw_in_row$travel <- NA
}
df_to_concat[[i]] <- throw_in_row
}
how_many_seconds <- 7
#throw_ins_sub <- head(throw_ins, 19)
throw_ins_sub <- throw_ins
df_to_concat <- list()
for(i in 1:nrow(throw_ins_sub))
{
match_id_filter <- throw_ins_sub$match_id[[i]]
start_time <- throw_ins_sub$minute[[i]]*60 + throw_ins_sub$second[[i]]
end_time <- start_time + how_many_seconds
team_id <- throw_ins_sub$teamId[[i]]
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
throw_in_scene <- tbl(con, "events") %>%
filter(match_id == match_id_filter) %>%
filter(between(minute*60 + second, start_time, end_time)) %>%
filter(isTouch == 1) %>%
filter(teamId == team_id | (teamId != team_id & outcome == "Successful" & type_name == "Pass")) %>%
collect()
DBI::dbDisconnect(con)
throw_in_row <- slice(throw_ins_sub, i)
start_x <- throw_in_row$location_x*1.05
start_y <- throw_in_row$location_y*0.68
first_three <- head(throw_in_scene, 3) %>%
filter(teamId == team_id & type_name == "Pass")
if(nrow(first_three) == 3 & (first_three[1, ]$playerId == first_three[3, ]$playerId)){
throw_in_row$layoff <- 1
} else{
throw_in_row$layoff <- 0
}
# two definitions: either team kept possession for full 5 seconds or team has possession at the end of 5 seconds
throw_in_scene <- throw_in_scene %>%
mutate(accurate_pass = if_else(outcome == "Successful" & type_name == "Pass", 1, 0))
if((length(unique(throw_in_scene$teamId)) == 1 & sum(throw_in_scene$accurate_pass) >= 2 )| 1 %in% throw_in_scene$isShot){
throw_in_row$kept_possession <- 1
} else {
throw_in_row$kept_possession <- 0
}
throw_in_scene <- throw_in_scene %>%
filter(teamId == team_id & outcome == "Successful" & type_name == "Pass") %>%
mutate(PassEndY = as.numeric(PassEndY), PassEndX = as.numeric(PassEndX), Length = as.numeric(Length))
if(sum(throw_in_scene$accurate_pass) >= 2){
final_pass <- slice(throw_in_scene, nrow(throw_in_scene)) %>%
mutate(PassEndY = as.numeric(PassEndY), PassEndX = as.numeric(PassEndX), Length = as.numeric(Length))
end_x <- final_pass$PassEndX*1.05
end_y <- final_pass$PassEndY*0.68
travel_from_throw_in <- sum(throw_in_scene$Length)
throw_in_row$travel <- travel_from_throw_in
if(travel_from_throw_in >= 30){
throw_in_row$kept_possession_travel <- 1
} else {
throw_in_row$kept_possession_travel <- 0
}
} else {
throw_in_row$kept_possession_travel <- 0
throw_in_row$travel <- NA
}
df_to_concat[[i]] <- throw_in_row
}
throw_ins_sub_poss <- purrr::reduce(df_to_concat, rbind)
throw_ins_sub_poss <- left_join(throw_ins_sub_poss, matches, by = c("match_id"))
throw_ins_sub_poss_q <- throw_ins_sub_poss %>%
mutate(tercile = ceiling(location_x/33))
kept_possession <- throw_ins_sub_poss_q %>%
#group_by(season, league, teamId) %>%
group_by(match_id, teamId) %>%
summarize(kept_possession = mean(kept_possession), kept_possession_travel = mean(kept_possession_travel), layoff = mean(layoff))
how_many_seconds <- 60
#events_sub <- head(events, 100)
throw_ins_sub <- throw_ins
df_to_concat <- list()
for(i in 1:nrow(throw_ins_sub))
{
match_id_filter <- throw_ins_sub$match_id[[i]]
end_time <- throw_ins_sub$minute[[i]]*60 + throw_ins_sub$second[[i]]
start_time <- end_time - how_many_seconds
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = "~/Documents/Blog/Data/data.sqlite")
throw_in_scene <- tbl(con, "events") %>%
filter(match_id == match_id_filter) %>%
filter(between(minute*60 + second, start_time, end_time)) %>%
collect()
DBI::dbDisconnect(con)
throw_in_row <- slice(throw_ins_sub, i)
row_in_scene <- nrow(throw_in_scene)
if(row_in_scene >= 2){
throw_in_row$time_to_throw_in <- (throw_in_scene$minute[[row_in_scene]]*60 + throw_in_scene$second[[row_in_scene]]) -
(throw_in_scene$minute[[row_in_scene-1]]*60 + throw_in_scene$second[[row_in_scene-1]])
} else{
throw_in_row$time_to_throw_in <- 60
}
df_to_concat[[i]] <- throw_in_row
}
throw_ins_sub_time <- purrr::reduce(df_to_concat, rbind)
throw_ins_sub_time <- left_join(throw_ins_sub_time, matches, by = c("match_id"))
throw_ins_sub_time_short <- throw_ins_sub_time %>%
select(event_id, time_to_throw_in)
avg_length <- events %>%
drop_na(Length) %>%
group_by(match_id) %>%
mutate(Length = as.numeric(Length)) %>%
summarise(count = n(), avg_length = mean(Length))
throw_ins_sub_poss_q <- throw_ins_sub_poss %>%
mutate(tercile = ceiling(location_x/33))
kept_possession <- throw_ins_sub_poss_q %>%
#group_by(season, league, teamId) %>%
group_by(match_id, teamId) %>%
summarize(kept_possession = mean(kept_possession), kept_possession_travel = mean(kept_possession_travel), layoff = mean(layoff))
throw_ins_sub_time_q <- throw_ins_sub_time %>%
mutate(quintile = ceiling(location_x/20))
time_to_throw <- throw_ins_sub_time_q %>%
group_by(season, league, quintile) %>%
summarize(time_to_throw_in = mean(time_to_throw_in))
merged_throw_in <- left_join(throw_ins_sub_time, select(throw_ins_sub_poss, c("event_id", "kept_possession")), matches, by = c("event_id")) %>%
mutate(tercile = ceiling(location_x/33))
retention_pressure <- merged_throw_in %>%
filter(time_to_throw_in >= 10) %>%
group_by(teamId) %>%
summarize(kept_possession = mean(kept_possession))
retention_by_time <- merged_throw_in %>%
mutate(time_to_throw_in = if_else(time_to_throw_in >= 30, 30, time_to_throw_in)) %>%
group_by(time_to_throw_in) %>%
summarize(kept_possession = mean(kept_possession), n = n())
length <- merged_throw_in %>%
mutate(Length = as.numeric(Length)) %>%
filter(time_to_throw_in >= 10) %>%
group_by(teamId, tercile) %>%
summarize(length = mean(Length, na.rm = TRUE))
angles <- merged_throw_in %>%
mutate(PassEndY = as.numeric(PassEndY), PassEndX = as.numeric(PassEndX)) %>%
mutate(angle = atan2(abs(PassEndY - location_y), PassEndX - location_x)*180/pi) %>%
select(event_id, season, league, quintile, location_x, location_y, PassEndX, PassEndY, angle, kept_possession) %>%
mutate(angle_class = if_else(angle <= 60, "Forward", if_else(angle <= 120, "Straight", "Backward"))) %>%
group_by(season, league, quintile, angle_class) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n))
angles <- merged_throw_in %>%
mutate(PassEndY = as.numeric(PassEndY), PassEndX = as.numeric(PassEndX)) %>%
mutate(angle = atan2(abs(PassEndY - location_y), PassEndX - location_x)*180/pi) %>%
select(event_id, season, league, quintile, location_x, location_y, PassEndX, PassEndY, angle, kept_possession) %>%
mutate(angle_class = if_else(angle <= 60, "Forward", if_else(angle <= 120, "Straight", "Backward"))) %>%
group_by(teamId, tercile, angle_class) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n))
angles <- merged_throw_in %>%
mutate(PassEndY = as.numeric(PassEndY), PassEndX = as.numeric(PassEndX)) %>%
mutate(angle = atan2(abs(PassEndY - location_y), PassEndX - location_x)*180/pi) %>%
select(event_id, teamId, tercile, location_x, location_y, PassEndX, PassEndY, angle, kept_possession) %>%
mutate(angle_class = if_else(angle <= 60, "Forward", if_else(angle <= 120, "Straight", "Backward"))) %>%
group_by(teamId, tercile, angle_class) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n))
View(angles)
angles <- merged_throw_in %>%
mutate(PassEndY = as.numeric(PassEndY), PassEndX = as.numeric(PassEndX)) %>%
mutate(angle = atan2(abs(PassEndY - location_y), PassEndX - location_x)*180/pi) %>%
select(event_id, teamId, tercile, location_x, location_y, PassEndX, PassEndY, angle, kept_possession) %>%
mutate(angle_class = if_else(angle <= 60, "Forward", if_else(angle <= 120, "Straight", "Backward"))) %>%
group_by(teamId, tercile, angle_class) %>%
summarise(n = n(), kept = mean(kept_possession)) %>%
mutate(freq = n / sum(n))
View(throw_in_scene)
