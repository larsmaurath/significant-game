geom_vline(xintercept = 0.82, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(2, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("xG") +
labs(title = "Schematic representation of modeling error.",
subtitle = "Distribution of likely, true xG values around imperfect model estimate of 0.25.") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- data.frame(
x = 0.1,
y = 8,
label = "Distribution of likely, true xG values for <b style = 'color:#DC2228'>great</b> and <b style = 'color:#91bfdb'>poor</b> xG models"
)
mu <- 0.75
sigma_2 <- 0.003
alpha <- mu*(mu*(1-mu)/sigma_2 - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma_2 - 1)
alpha_2 <- alpha + 133
beta_2 <- beta + 26
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = 0.82, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(2, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("xG") +
labs(title = "Schematic representation of modeling error.",
subtitle = "Distribution of likely, true xG values around imperfect model estimate of 0.25.") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- data.frame(
x = 0.1,
y = 8,
label = "<b style = 'color:#DC2228'>Prior</b> and <b style = 'color:#91bfdb'>posterior</b> distribution of penalty success"
)
mu <- 0.75
sigma_2 <- 0.003
alpha <- mu*(mu*(1-mu)/sigma_2 - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma_2 - 1)
alpha_2 <- alpha + 133
beta_2 <- beta + 26
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = 0.82, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(2, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("xG") +
labs(title = "Schematic representation of modeling error.",
subtitle = "Distribution of likely, true xG values around imperfect model estimate of 0.25.") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- data.frame(
x = 0.1,
y = 8,
label = "<b style = 'color:#DC2228'>Prior</b> and <b style = 'color:#91bfdb'>posterior</b> distribution of penalty success. The prior is the success rate for the average player, the posterior the best guess after observing C. Ronaldo's record."
)
mu <- 0.75
sigma_2 <- 0.003
alpha <- mu*(mu*(1-mu)/sigma_2 - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma_2 - 1)
alpha_2 <- alpha + 133
beta_2 <- beta + 26
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = 0.82, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(2, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("xG") +
labs(title = "Schematic representation of modeling error.",
subtitle = "Distribution of likely, true xG values around imperfect model estimate of 0.25.") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- data.frame(
x = 0.1,
y = 8,
label = "<b style = 'color:#DC2228'>Prior</b> and <b style = 'color:#91bfdb'>posterior</b> distribution of penalty success. The prior is the success rate for the average player, the posterior the best guess after observing C. Ronaldo's record."
)
mu <- 0.75
sigma_2 <- 0.003
alpha <- mu*(mu*(1-mu)/sigma_2 - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma_2 - 1)
alpha_2 <- alpha + 133
beta_2 <- beta + 26
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = 0.82, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(3, "in"),
height = grid::unit(2, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("xG") +
labs(title = "Schematic representation of modeling error.",
subtitle = "Distribution of likely, true xG values around imperfect model estimate of 0.25.") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- data.frame(
x = 0.1,
y = 8,
label = "<b style = 'color:#DC2228'>Prior</b> and <b style = 'color:#91bfdb'>posterior</b> distribution of penalty success. The prior is the success rate for the average player, the posterior the best guess after observing C. Ronaldo's record."
)
mu <- 0.75
sigma_2 <- 0.003
alpha <- mu*(mu*(1-mu)/sigma_2 - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma_2 - 1)
alpha_2 <- alpha + 133
beta_2 <- beta + 26
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = 0.82, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(3, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("xG") +
labs(title = "Schematic representation of modeling error.",
subtitle = "Distribution of likely, true xG values around imperfect model estimate of 0.25.") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- data.frame(
x = 0.1,
y = 10,
label = "<b style = 'color:#DC2228'>Prior</b> and <b style = 'color:#91bfdb'>posterior</b> distribution of penalty success. The prior is the success rate for the average player, the posterior the best guess after observing C. Ronaldo's record."
)
mu <- 0.75
sigma_2 <- 0.003
alpha <- mu*(mu*(1-mu)/sigma_2 - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma_2 - 1)
alpha_2 <- alpha + 133
beta_2 <- beta + 26
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = 0.82, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(3, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("xG") +
labs(title = "Schematic representation of modeling error.",
subtitle = "Distribution of likely, true xG values around imperfect model estimate of 0.25.") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- data.frame(
x = 0.1,
y = 10,
label = "<b style = 'color:#DC2228'>Prior</b> and <b style = 'color:#91bfdb'>posterior</b> distribution of penalty success. The prior is the success rate for the average player, the posterior the best guess after observing C. Ronaldo's record."
)
mu <- 0.75
sigma_2 <- 0.003
alpha <- mu*(mu*(1-mu)/sigma_2 - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma_2 - 1)
alpha_2 <- alpha + 133
beta_2 <- beta + 26
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
#geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = 0.82, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(3, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("xG") +
labs(title = "Schematic representation of modeling error.",
subtitle = "Distribution of likely, true xG values around imperfect model estimate of 0.25.") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- data.frame(
x = 0.1,
y = 10,
label = "<b style = 'color:#DC2228'>Prior</b> and <b style = 'color:#91bfdb'>posterior</b> distribution of penalty success. The prior is the success rate for the average player, the posterior the best guess after observing C. Ronaldo's record."
)
mu <- 0.75
sigma_2 <- 0.003
alpha <- mu*(mu*(1-mu)/sigma_2 - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma_2 - 1)
alpha_2 <- alpha + 133
beta_2 <- beta + 26
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
#geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = 0.82, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(3, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("Probability of Scoring Penalty") +
labs(title = "Schematic representation of modeling error.",
subtitle = "Distribution of likely, true xG values around imperfect model estimate of 0.25.") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- data.frame(
x = 0.1,
y = 10,
label = "<b style = 'color:#DC2228'>Prior</b> and <b style = 'color:#91bfdb'>posterior</b> distribution of penalty success. The prior is the success rate for the average player, the posterior the best guess after observing C. Ronaldo's record."
)
mu <- 0.75
sigma_2 <- 0.003
alpha <- mu*(mu*(1-mu)/sigma_2 - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma_2 - 1)
alpha_2 <- alpha + 133
beta_2 <- beta + 26
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
#geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = 0.82, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(3, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("Probability of Scoring Penalty") +
labs(title = "Bayesian Updating of Penalty Success Rate",
subtitle = "Distribution of likely, true xG values around imperfect model estimate of 0.25.") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- data.frame(
x = 0.1,
y = 10,
label = "<b style = 'color:#DC2228'>Prior</b> and <b style = 'color:#91bfdb'>posterior</b> distribution of penalty success. The prior is the success rate for the average player, the posterior the best guess for a player with C. Ronaldo's record."
)
mu <- 0.75
sigma_2 <- 0.003
alpha <- mu*(mu*(1-mu)/sigma_2 - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma_2 - 1)
alpha_2 <- alpha + 133
beta_2 <- beta + 26
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
#geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = 0.82, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(3, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("Probability of Scoring Penalty") +
labs(title = "Bayesian Updating of Penalty Success Rate",
subtitle = "Distribution of likely, true xG values around imperfect model estimate of 0.25.") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- read_csv("../data/ronaldo_penalties.csv", col_types = cols())
avg_pen <- 0.75
df_freq <- df %>%
arrange(age) %>%
mutate(cumulativ_goals = cumsum(goal)) %>%
mutate(cumulativ_penalty = row_number()) %>%
mutate(normal_mean = avg_pen*cumulativ_penalty) %>%
mutate(normal_std = sqrt(avg_pen*(1-avg_pen)*cumulativ_penalty)) %>%
mutate(std_normal = (cumulativ_goals - normal_mean)/normal_std)
df_list <- list()
for(i in 1:nrow(df_freq)){
date = df_freq$date[[i]]
minute = df_freq$minute[[i]]
normal_mean = df_freq$normal_mean[[i]]
normal_std = df_freq$normal_std[[i]]
df_for_x <- tibble(x = seq(from = normal_mean - 5*normal_std,
to = normal_mean + 5*normal_std,
length.out = 200)) %>%
mutate(y = dnorm(x, mean = normal_mean, sd = normal_std)) %>%
rowwise() %>%
mutate(group = if_else(x >= normal_mean + 1.96*normal_std, "1", if_else(x <= normal_mean - 1.96*normal_std, "3", "2"))) %>%
mutate(date = date) %>%
mutate(minute = minute) %>%
ungroup()
df_list[[i]] <- df_for_x
}
df_for_plot <- tibble(purrr::reduce(df_list, rbind))
df_for_plot <- left_join(df_for_plot, df_freq, by = c("date", "minute"))
df_for_plot <- df_for_plot %>%
filter(cumulativ_penalty >= 30)
p <- ggplot(df_for_plot, aes(x = x, y = y, fill = group)) +
geom_density_line(stat = "identity", size = .5, alpha = 0.8) +
scale_fill_manual(name = '', values = c("1" = "#91bfdb", "2" = "grey", "3" = "#91bfdb")) +
geom_vline(aes(xintercept = cumulativ_goals), linetype = "dashed") +
xlab("Penalties Taken") +
labs(title = "Why is it so hard to judge finishing ability? Sample Size",
subtitle = 'Penalties Taken: {df_for_plot$cumulativ_penalty[as.integer(closest_state)*100]}, Penalties Scored: {df_for_plot$cumulativ_goals[as.integer(closest_state)*100]}, Above Average Finishing <b style = "color:grey">Accepted</b>/<b style = "color:#91bfdb">Rejected</b>') +
theme_minimal() +
theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
legend.position = "none",
plot.title = element_markdown(size = 12),
plot.subtitle = element_markdown(size = 10)) +
transition_states(cumulativ_penalty)
animate(plot = p, nframes = 2 * length(unique(df_for_plot$cumulativ_penalty)))
View(df_for_plot)
df <- data.frame(
x = 0.1,
y = 10,
label = "<b style = 'color:#DC2228'>Prior</b> and <b style = 'color:#91bfdb'>posterior</b> distribution of penalty success. The prior is the success rate for the average player, the posterior the best guess for a player with C. Ronaldo's record."
)
mu <- 0.75
sigma_2 <- 0.003
alpha <- mu*(mu*(1-mu)/sigma_2 - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma_2 - 1)
alpha_2 <- alpha + 25
beta_2 <- beta + 5
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
#geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = 0.82, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(3, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("Probability of Scoring Penalty") +
labs(title = "Bayesian Updating of Penalty Success Rate",
subtitle = "Observing C. Ronaldo's Penalty Record Allows us to make better Estimates for his future success") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- data.frame(
x = 0.1,
y = 10,
label = "<b style = 'color:#DC2228'>Prior</b> and <b style = 'color:#91bfdb'>posterior</b> distribution of penalty success. The prior is the success rate for the average player, the posterior the best guess for a player with C. Ronaldo's record."
)
mu <- 0.75
sigma <- 0.003
alpha <- mu*(mu*(1-mu)/sigma - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma - 1)
alpha_2 <- alpha + 25
beta_2 <- beta + 5
mu <- alpha_2/(alpha_2+beta_2)
sigma <- alpha_2*beta_2/((alpha_2+beta_2)*(alpha_2+beta_2)*(alpha_2+beta_2+1))
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
#geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = 0.82, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(3, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("Probability of Scoring Penalty") +
labs(title = "Bayesian Updating of Penalty Success Rate",
subtitle = "Observing C. Ronaldo's Penalty Record Allows us to make better Estimates for his future success") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- data.frame(
x = 0.1,
y = 10,
label = "<b style = 'color:#DC2228'>Prior</b> and <b style = 'color:#91bfdb'>posterior</b> distribution of penalty success. The prior is the success rate for the average player, the posterior the best guess for a player with C. Ronaldo's record."
)
mu <- 0.75
sigma <- 0.003
alpha <- mu*(mu*(1-mu)/sigma - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma - 1)
alpha_2 <- alpha + 25
beta_2 <- beta + 5
mu_2 <- alpha_2/(alpha_2+beta_2)
sigma_2 <- alpha_2*beta_2/((alpha_2+beta_2)*(alpha_2+beta_2)*(alpha_2+beta_2+1))
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
#geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = 0.82, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(3, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("Probability of Scoring Penalty") +
labs(title = "Bayesian Updating of Penalty Success Rate",
subtitle = "Observing C. Ronaldo's Penalty Record Allows us to make better Estimates for his future success") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- data.frame(
x = 0.1,
y = 10,
label = "<b style = 'color:#DC2228'>Prior</b> and <b style = 'color:#91bfdb'>posterior</b> distribution of penalty success. The prior is the success rate for the average player, the posterior the best guess for a player with C. Ronaldo's record."
)
mu <- 0.75
sigma <- 0.003
alpha <- mu*(mu*(1-mu)/sigma - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma - 1)
alpha_2 <- alpha + 25
beta_2 <- beta + 5
mu_2 <- alpha_2/(alpha_2+beta_2)
sigma_2 <- alpha_2*beta_2/((alpha_2+beta_2)*(alpha_2+beta_2)*(alpha_2+beta_2+1))
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
#geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = mu_2, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(3, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("Probability of Scoring Penalty") +
labs(title = "Bayesian Updating of Penalty Success Rate",
subtitle = "Observing C. Ronaldo's Penalty Record Allows us to make better Estimates for his future success") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
df <- data.frame(
x = 0.1,
y = 10,
label = "<b style = 'color:#DC2228'>Prior</b> and <b style = 'color:#91bfdb'>posterior</b> distribution of penalty success. The prior is the success rate for the average player, the posterior the best guess for a player with C. Ronaldo's record."
)
mu <- 0.75
sigma <- 0.003
alpha <- mu*(mu*(1-mu)/sigma - 1)
beta <- (1-mu)*(mu*(1-mu)/sigma - 1)
alpha_2 <- alpha + 133
beta_2 <- beta + 26
mu_2 <- alpha_2/(alpha_2+beta_2)
sigma_2 <- alpha_2*beta_2/((alpha_2+beta_2)*(alpha_2+beta_2)*(alpha_2+beta_2+1))
ggplot(data.frame(x = seq(0.02, 1, 0.01)), aes(x)) +
#geom_vline(xintercept = 0.75, linetype = "dashed") +
geom_vline(xintercept = mu_2, linetype = "dashed") +
stat_function(fun = function(x) dbeta(x, alpha, beta), color = "#DC2228", size = 0.5) +
stat_function(fun = function(x) dbeta(x, alpha_2, beta_2), color = "#91bfdb", size = 0.5) +
geom_textbox(
data = df,
aes(x, y, label = label),
width = grid::unit(3, "in"),
height = grid::unit(1, "in"),
hjust = 0, vjust = 1, size = 4,
) +
xlab("Probability of Scoring Penalty") +
labs(title = "Bayesian Updating of Penalty Success Rate",
subtitle = "Observing C. Ronaldo's Penalty Record Allows us to make better Estimates for his future success") +
theme_minimal() +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank())
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
