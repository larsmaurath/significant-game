<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xG on The Significant Game</title>
    <link>/tags/xg/</link>
    <description>Recent content in xG on The Significant Game</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Dec 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/xg/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Do Naive xG Models underestimate Expected Goals for Top Teams?</title>
      <link>/portfolio/do-naive-xg-models-underestimate-expected-goals-for-top-teams/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/portfolio/do-naive-xg-models-underestimate-expected-goals-for-top-teams/</guid>
      <description>After documenting the implementation of a simple xG model I have spent quite a bit of time thinking about what makes a good model and how you could go about quantifying its quality.
Coincidentally, a few weeks ago Tom Worville posted the below chart which sparked a bit of a discussion around the relationship between high shooting output and overperformance of xG.
Look at how clinical Son&amp;#39;s been in terms of scoring above expected (t/t @Torvaney for the gridline idea here) pic.</description>
    </item>
    
    <item>
      <title>xG Model - Accuracy and Goodness-Of-Fit</title>
      <link>/portfolio/xg-model-accuracy-and-goodness-of-fit/</link>
      <pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/portfolio/xg-model-accuracy-and-goodness-of-fit/</guid>
      <description>In the first part of this series we constructed a simple expected Goals-model, solely relying on two predictors: the distance and angle from goal for each shot.
As a reminder see below the visualization of our xG-estimates from the first part of this series:

Our model passed the eye test, i.e. it maps shot locations to xG-values that make intuitive sense to us.
In this post we want to evaluate the quality of this model more formally with tidymodels’ yardstick package.</description>
    </item>
    
    <item>
      <title>xG Model - Design and Implementation with R Tidymodels</title>
      <link>/portfolio/expected-goals-model-with-tidymodels/</link>
      <pubDate>Fri, 07 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/portfolio/expected-goals-model-with-tidymodels/</guid>
      <description>I have recently gone through the Google Machine Learning crash course and was looking for a project to apply these skills to. Coincidentally, it is also not that long ago that tidymodels has gained some traction (at least in my twitter feed) and I am keen to try it out.
Of course an Expected Goals-model is a great excuse to combine the two items above. It is relatively easy to set up, readers of this blog will not need a lengthy introduction to the thought process behind it and the feature set used to explain the probability of shots leading to goal is very intuitive.</description>
    </item>
    
  </channel>
</rss>